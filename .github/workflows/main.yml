name: Build and Deploy Application

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_RG_NAME: "myblog-rg" 
  AZURE_AKS_NAME: "myblog-aks"
  AZURE_ACR_NAME: "myblogacr98756jibin.azurecr.io"

jobs:
  # JOB 1: Build and Push Images
  build_and_push_docker:
    name: 1. Build and Push Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Azure
        id: azure_login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_ACR_NAME }}
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          
      - name: Build and push posts-service
        run: |
          docker build -t ${{ env.AZURE_ACR_NAME }}/posts-service:latest ./services/posts-service
          docker push ${{ env.AZURE_ACR_NAME }}/posts-service:latest
          
      - name: Build and push frontend
        run: |
          docker build -t ${{ env.AZURE_ACR_NAME }}/frontend:latest ./services/frontend
          docker push ${{ env.AZURE_ACR_NAME }}/frontend:latest

  # JOB 2: Deploy to AKS
  deploy_to_aks:
    name: 2. Deploy to AKS
    runs-on: ubuntu-latest
    needs: [build_and_push_docker] # <-- This now waits ONLY for the build
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Ansible and K8s tools
        run: |
          pip install ansible
          pip install kubernetes
          ansible-galaxy collection install azure.azcollection
          
      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ env.AZURE_RG_NAME }} --name ${{ env.AZURE_AKS_NAME }} --overwrite-existing
      
      - name: Install Nginx Ingress Controller (if not present)
        command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
        changed_when: false

      - name: Wait for Nginx Ingress Controller
        command: kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=300s
        changed_when: false
          
      - name: Run Ansible Playbook
        run: ansible-playbook ansible/playbook.yml